Tenemos un amigo llamado Carlos, que es bastante desconfiado. En su vida, eso se manifiesta en muchos aspectos, pero el más notorio es su forma de caminar: sólo camina hacia el Este y siempre que da dos pasos hacia adelante automáticamente da un paso hacia atrás.

Por ejemplo, si le pidiéramos que diera 2 pasos, terminaría dando 1; si le pidiéramos 4, daría 2; y así sucesivamente. En definitiva, lo que termina pasando es que nuestro amigo da la mitad de los pasos que le pedimos.

Importante: en Gobstones usamos el operador div para dividir; por ejemplo "4 dividido 2" se escribe 4 div 2.

Definí el procedimiento CaminarDesconfiado(pasos) que simule el caminar de Carlos: debe recibir la cantidad de pasos que debería dar y recorrer la mitad. Siempre se mueve al Este.

procedure CaminarDesconfiado(pasos) {
MoverN(pasos div 2, Este)
}

Sobre el ejemplo de 4 pasos, no hay dudas: Carlos dio 2 pasos. Ahora, cuando le pedimos que diera 7, ¿por qué dio 3?

En Gobstones, la división es entera: se ignoran los decimales. De esta forma, 7 div 2 termina dando 3 en vez de 3.5.
